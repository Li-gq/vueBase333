组件间通信方式：
    props， 自定义事件， 全局事件总线， 消息订阅和发布， 插槽
全局事件总线:
    本质上就是一个对象
    两个条件：
        1.必须让所有组件对象都可以看到；
        2.这个对象必须都使用$on和$emit方法。
    在Vue中，都是选择vm作为全局事件总线。
    事件最终绑定在总线身上，回调函数留在需要接收数据的组件中
    最终触发的是总线上的事件，传递数据组件的数据触发的时候被传递
    this.$bus.$on——接收数据的组件
    this.$bus.$emit——传递数据的组件

消息订阅和发布（在Vue中几乎不用，谁用谁SB，哈哈哈）
    使用pubsub-js插件
    引入： import PubSub from "pubsub-js"
    订阅（在接收数据的组件中，mounted）： PubSub.subscribe("订阅名", 函数)
                                ——注意此处定义的函数第一个参数是订阅名，必须传入
    取消订阅（在接收数据的组件中, beforeDestory）：PubSub.unsubscribe()
    发布（在发送数据的组件中）：PubSub.publish("订阅名", 函数的其他参数)

插槽：
    分为：默认插槽，具名插槽，作用域插槽
    